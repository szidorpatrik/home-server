services:
  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    environment:
      - SEARXNG_BASE_URL=https://${SEARXNG_HOSTNAME}/
      - UWSGI_WORKERS=${SEARXNG_UWSGI_WORKERS}
      - UWSGI_THREADS=${SEARXNG_UWSGI_THREADS}
    volumes:
      - ./searxng:/etc/searxng:rw
      - ./searxng/searxng-data:/var/cache/searxng:rw
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    depends_on:
      caddy:
        condition: service_started
    networks:
      - pihole_network

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - '80:80' # Remove before starting Caddy
      - '53:53/tcp'
      - '53:53/udp'
    environment:
      TZ: ${TZ}
      FTLCONF_webserver_api_password: ${FTLCONF_webserver_api_password}
      FTLCONF_dns_listeningMode: ${FTLCONF_dns_listeningMode}
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
    cap_add:
      - SYS_NICE
    networks:
      - pihole_network

  caddy:
    container_name: caddy
    image: caddy:latest
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    volumes:
      - './caddy/Caddyfile:/etc/caddy/Caddyfile'
      - './caddy/certs:/etc/caddy/certs:ro'
      - './caddy/data:/data'
      - './caddy/config:/config'
    depends_on:
      - pihole
    networks:
      - pihole_network

  redis:
    container_name: redis
    restart: unless-stopped
    image: redis:alpine
    volumes:
      - './redis:/data'
    mem_limit: 2400m
    mem_reservation: 2200m
    networks:
      - pihole_network

  nextcloud:
    container_name: nextcloud
    image: nextcloud:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - REDIS_HOST=${REDIS_HOST}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - OVERWRITEHOST=${OVERWRITEHOST}
      - OVERWRITEPROTOCOL=${OVERWRITEPROTOCOL}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_HOST=${MYSQL_HOST}
    volumes:
      - './nextcloud/config:/var/www/html/config'
      # Uncomment if you want to mount the apps
      #- './nextcloud/apps:/var/www/html/apps'
      - './nextcloud/data:/var/www/html/data'
      - './nextcloud/mpm_prefork.conf:/etc/apache2/mods-available/mpm_prefork.conf:ro'
      - './nextcloud/php.ini-production:/usr/local/etc/php/php.ini-production'
    depends_on:
      caddy:
        condition: service_started
      mariadb:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - pihole_network

  mariadb:
    container_name: mariadb
    restart: unless-stopped
    image: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./mariadb:/var/lib/mysql
    networks:
      - pihole_network

  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:latest
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - './jellyfin/config:/config'
      - './jellyfin/cache:/cache'
      - './jellyfin/media:/media'
    ports:
      - '8096:8096'
    networks:
      - pihole_network
    depends_on:
      - caddy
    mem_limit: 2048m
    mem_reservation: 1024m

networks:
  pihole_network:
    driver: bridge
