services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    restart: unless-stopped
    depends_on:
      pihole: 
        condition: service_healthy
    networks:
      - pihole_network

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    environment:
      TZ: ${TZ}
      FTLCONF_webserver_api_password: ${FTLCONF_webserver_api_password}
      FTLCONF_dns_listeningMode: ${FTLCONF_dns_listeningMode}
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    networks:
      - pihole_network

  sftpgo:
    container_name: sftpgo
    image: drakkan/sftpgo:latest
    ports:
      - "${SFTPGO_SFTP_PORT}:${SFTPGO_SFTP_PORT}/tcp" # SFTP
      - "${SFTPGO_WEBDAV_PORT}:${SFTPGO_WEBDAV_PORT}/tcp" # WebDav
    environment:
      - SFTPGO_WEBDAVD__BINDINGS__0__PORT=${SFTPGO_WEBDAV_PORT}
      - SFTPGO_WEBDAVD__BINDINGS__0__ENABLE_HTTPS=true
      - SFTPGO_WEBDAVD__BINDINGS__0__PREFIX=/webdav
      - SFTPGO_WEBDAVD__BINDINGS__0__CERTIFICATE_FILE=/var/lib/sftpgo/wildcard.szipat.lan.crt
      - SFTPGO_WEBDAVD__BINDINGS__0__CERTIFICATE_KEY_FILE=/var/lib/sftpgo/wildcard.szipat.lan.key
    volumes:
      - ./sftpgo/data:/srv/sftpgo
      - ./sftpgo/home:/var/lib/sftpgo
    restart: unless-stopped
    networks:
      - pihole_network

networks:
  pihole_network:
    driver: bridge
